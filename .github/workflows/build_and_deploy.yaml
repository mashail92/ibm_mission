name: Build & Deploy
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
jobs:
  Build:
    name: Build & Push Docker images of the Apps
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Login to GitHub container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "-- INFO: Building image...."
          docker build -t ghcr.io/mashail/hello:${IMAGE_TAG} ./apps/hello/
          echo "-- INFO: Image built successfully ðŸŽ‰."

          echo "-- INFO: Pushing image..."
          docker push ghcr.io/mashail/hello:${IMAGE_TAG}
          echo "-- INFO: Image pushed successfully ðŸŽ‰."

  Deploy:
    runs-on: ubuntu-latest
    name: Deploy Apps
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: actions-hub/kubectl@a56fcbcc47cc4bab77d91195d85f8ad657e6fb2a # v1.28.4
        env:
          KUBE_HOST: ip172-18-0-57-clo3cna4rl3g009d5mo0.direct.labs.play-with-k8s.com
        with:
          args: get pods
      - name: Run Deployment playbook
        uses: dawidd6/action-ansible-playbook@5d970176ea4bfd99a3f5004d48e293fe0994eda1 # v2.6.1
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          # Required, playbook filepath
          playbook: main.yml
        # Optional, directory where playbooks live
        directory: ./apps/hello/deploy/ansible
        # Optional, additional flags to pass to ansible-playbook
        options: |
          --inventory hosts
          --extra-vars "image_tag=$IMAGE_TAG"
          --verbose